name: Release - Bump and Release
on: [workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  create_release_draft:
    name: Create the release draft
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: ⤵️　Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: 🗑　Delete drafts
        uses: hugo19941994/delete-draft-releases@v2.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📝　Draft release
        uses: release-drafter/release-drafter@v6
        id: release_drafter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔄　Update version in 'setup.py' and push changes
        env:
          tag_name: ${{ steps.release_drafter.outputs.tag_name }}
          GITHUB_REPO: ${{ github.event.repository.name }}
        run: |
          sed -i 's/version=".*"/version="'$tag_name'"/g' setup.py
          echo $tag_name > VERSION

      - name: 🚀　Add and commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: Bump version

      - name: 📝　Publish release
        uses: release-drafter/release-drafter@v6
        id: release_published
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish: true

      - name: "✏️　Generate release changelog"
        uses: heinrichreimer/github-changelog-generator-action@v2.4
        with:
          token: ${{ secrets.GH_PAT }}
          issues: true
          issuesWoLabels: true
          pullRequests: true
          prWoLabels: true
          unreleased: false
          addSections: '{"documentation":{"prefix":"**Documentation:**","labels":["documentation"]}}'

      - name: ✅　Commit release notes
        uses: EndBug/add-and-commit@v9
        with:
          message: Commit release notes

      - name: ✅　Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: ✅　Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: ✅　Build and publish
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
      - name: Discord notification
        env:
          tag_name: ${{ steps.release_drafter.outputs.tag_name }}
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: "New release published: https://github.com/{{ EVENT_PAYLOAD.repository.full_name }}/releases/tag/{{tag_name}}"
